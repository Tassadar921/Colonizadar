// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types';
import type { InferInput } from '@vinejs/vine/types';

type ApiLoginPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['login'], false>;
};
type ApiAccountcreationSendmailPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['sendAccountCreationEmail'], false>;
};
type ApiAccountcreationConfirmIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['confirmAccountCreation'], false>;
};
type ApiResetpasswordSendmailPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/profile_controller.ts').default['sendResetPasswordEmail'], false>;
};
type ApiResetpasswordConfirmIdPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/profile_controller.ts').default['resetPassword'], false>;
};
type ApiLogoutGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logout'], false>;
};
type ApiProfileGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/profile_controller.ts').default['getProfile'], false>;
};
type ApiProfileUpdatePost = {
    request: MakeTuyauRequest<InferInput<(typeof import('../app/validators/profile.ts'))['uploadProfilePictureValidator']>>;
    response: MakeTuyauResponse<import('../app/controllers/profile_controller.ts').default['updateProfile'], true>;
};
type ApiFriendsGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/friend_controller.ts').default['search'], false>;
};
type ApiFriendsAddGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/user_controller.ts').default['searchNotFriends'], false>;
};
type ApiFriendsAskPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/pending_friend_controller.ts').default['add'], false>;
};
type ApiFriendsAcceptPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/friend_controller.ts').default['accept'], false>;
};
type ApiFriendsRefusePost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/friend_controller.ts').default['refuse'], false>;
};
type ApiFriendsPendingGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/pending_friend_controller.ts').default['search'], false>;
};
type ApiFriendsPendingCancelIdDelete = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/pending_friend_controller.ts').default['cancel'], false>;
};
type ApiFriendsRemoveIdDelete = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/friend_controller.ts').default['remove'], false>;
};
type ApiBlockedGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/blocked_user_controller.ts').default['search'], false>;
};
type ApiBlockedAddIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/blocked_user_controller.ts').default['block'], false>;
};
type ApiBlockedCancelIdDelete = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/blocked_user_controller.ts').default['cancel'], false>;
};
type ApiNotificationsPendingfriendsGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/notification_controller.ts').default['getPendingFriends'], false>;
};
type ApiRoomCreatePost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['create'], false>;
};
type ApiRoomBotdifficultiesGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['getBotDifficulties'], false>;
};
type ApiRoomIdPlayablecountriesGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/playable_country_controller.ts').default['getAll'], false>;
};
type ApiRoomMapsGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/map_controller.ts').default['getAll'], false>;
};
type ApiRoomJoinPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['checkWithToken'], false>;
};
type ApiRoomIdInvitePost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['invite'], false>;
};
type ApiRoomIdJoinPut = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['join'], false>;
};
type ApiRoomIdLeaveDelete = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['leave'], false>;
};
type ApiRoomIdHeartbeatPatch = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['heartbeat'], false>;
};
type ApiRoomIdAddbotPost = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['addBot'], false>;
};
type ApiRoomIdKickIdDelete = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['kick'], false>;
};
type ApiRoomIdPlayerIdSelectcountryPatch = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['selectCountry'], false>;
};
type ApiRoomIdPlayerIdSelectdifficultyPatch = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['selectBotDifficulty'], false>;
};
type ApiRoomIdPlayerIdReadyPatch = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/room_controller.ts').default['ready'], false>;
};
type ApiGameIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/game_controller.ts').default['get'], false>;
};
type ApiStaticProfilepictureIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/file_controller.ts').default['serveStaticProfilePictureFile'], false>;
};
type ApiStaticBotpictureIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/file_controller.ts').default['serveStaticBotPictureFile'], false>;
};
type ApiStaticCountryflagIdGetHead = {
    request: unknown;
    response: MakeTuyauResponse<import('../app/controllers/file_controller.ts').default['serveStaticCountryFlagFile'], false>;
};
export interface ApiDefinition {
    api: {
        login: {
            $url: {};
            $post: ApiLoginPost;
        };
        'account-creation': {
            'send-mail': {
                $url: {};
                $post: ApiAccountcreationSendmailPost;
            };
            confirm: {
                ':token': {
                    $url: {};
                    $get: ApiAccountcreationConfirmIdGetHead;
                    $head: ApiAccountcreationConfirmIdGetHead;
                };
            };
        };
        'reset-password': {
            'send-mail': {
                $url: {};
                $post: ApiResetpasswordSendmailPost;
            };
            confirm: {
                ':token': {
                    $url: {};
                    $post: ApiResetpasswordConfirmIdPost;
                };
            };
        };
        logout: {
            $url: {};
            $get: ApiLogoutGetHead;
            $head: ApiLogoutGetHead;
        };
        profile: {
            $url: {};
            $get: ApiProfileGetHead;
            $head: ApiProfileGetHead;
            update: {
                $url: {};
                $post: ApiProfileUpdatePost;
            };
        };
        friends: {
            $url: {};
            $get: ApiFriendsGetHead;
            $head: ApiFriendsGetHead;
            add: {
                $url: {};
                $get: ApiFriendsAddGetHead;
                $head: ApiFriendsAddGetHead;
            };
            ask: {
                $url: {};
                $post: ApiFriendsAskPost;
            };
            accept: {
                $url: {};
                $post: ApiFriendsAcceptPost;
            };
            refuse: {
                $url: {};
                $post: ApiFriendsRefusePost;
            };
            pending: {
                $url: {};
                $get: ApiFriendsPendingGetHead;
                $head: ApiFriendsPendingGetHead;
                cancel: {
                    ':userId': {
                        $url: {};
                        $delete: ApiFriendsPendingCancelIdDelete;
                    };
                };
            };
            remove: {
                ':userId': {
                    $url: {};
                    $delete: ApiFriendsRemoveIdDelete;
                };
            };
        };
        blocked: {
            $url: {};
            $get: ApiBlockedGetHead;
            $head: ApiBlockedGetHead;
            add: {
                ':userId': {
                    $url: {};
                    $get: ApiBlockedAddIdGetHead;
                    $head: ApiBlockedAddIdGetHead;
                };
            };
            cancel: {
                ':userId': {
                    $url: {};
                    $delete: ApiBlockedCancelIdDelete;
                };
            };
        };
        notifications: {
            'pending-friends': {
                $url: {};
                $get: ApiNotificationsPendingfriendsGetHead;
                $head: ApiNotificationsPendingfriendsGetHead;
            };
        };
        room: {
            create: {
                $url: {};
                $post: ApiRoomCreatePost;
            };
            'bot-difficulties': {
                $url: {};
                $get: ApiRoomBotdifficultiesGetHead;
                $head: ApiRoomBotdifficultiesGetHead;
            };
            ':mapId': {
                'playable-countries': {
                    $url: {};
                    $get: ApiRoomIdPlayablecountriesGetHead;
                    $head: ApiRoomIdPlayablecountriesGetHead;
                };
            };
            maps: {
                $url: {};
                $get: ApiRoomMapsGetHead;
                $head: ApiRoomMapsGetHead;
            };
            join: {
                $url: {};
                $post: ApiRoomJoinPost;
            };
            ':roomId': {
                invite: {
                    $url: {};
                    $post: ApiRoomIdInvitePost;
                };
                join: {
                    $url: {};
                    $put: ApiRoomIdJoinPut;
                };
                leave: {
                    $url: {};
                    $delete: ApiRoomIdLeaveDelete;
                };
                heartbeat: {
                    $url: {};
                    $patch: ApiRoomIdHeartbeatPatch;
                };
                'add-bot': {
                    $url: {};
                    $post: ApiRoomIdAddbotPost;
                };
                kick: {
                    ':playerId': {
                        $url: {};
                        $delete: ApiRoomIdKickIdDelete;
                    };
                };
                player: {
                    ':playerId': {
                        'select-country': {
                            $url: {};
                            $patch: ApiRoomIdPlayerIdSelectcountryPatch;
                        };
                        'select-difficulty': {
                            $url: {};
                            $patch: ApiRoomIdPlayerIdSelectdifficultyPatch;
                        };
                        ready: {
                            $url: {};
                            $patch: ApiRoomIdPlayerIdReadyPatch;
                        };
                    };
                };
            };
        };
        game: {
            ':gameId': {
                $url: {};
                $get: ApiGameIdGetHead;
                $head: ApiGameIdGetHead;
            };
        };
        static: {
            'profile-picture': {
                ':userId': {
                    $url: {};
                    $get: ApiStaticProfilepictureIdGetHead;
                    $head: ApiStaticProfilepictureIdGetHead;
                };
            };
            'bot-picture': {
                ':botId': {
                    $url: {};
                    $get: ApiStaticBotpictureIdGetHead;
                    $head: ApiStaticBotpictureIdGetHead;
                };
            };
            'country-flag': {
                ':countryId': {
                    $url: {};
                    $get: ApiStaticCountryflagIdGetHead;
                    $head: ApiStaticCountryflagIdGetHead;
                };
            };
        };
    };
}
const routes = [] as const;
export const api = {
    routes,
    definition: {} as ApiDefinition,
};
