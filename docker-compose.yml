services:
    db:
        image: postgres:latest
        container_name: db
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data

    redis:
        image: redis:latest
        container_name: redis
        restart: always

    backend:
        build:
            context: .
            dockerfile: ./Dockerfile.back
        container_name: back
        restart: always
        env_file: ./back/.env
        working_dir: /app
        volumes:
            - ./back:/app
            - /app/node_modules
        ports:
            - '${PORT}:${PORT}'
        depends_on:
            - db
            - redis

    frontend:
        build:
            context: .
            dockerfile: ./Dockerfile.front
        container_name: front
        restart: always
        env_file: ./front/.env
        working_dir: /app
        command: npm run dev -- --host --force
        volumes:
            - ./front:/app
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
            - WATCHPACK_POLLING=true
        ports:
            - '5173:5173'
        depends_on:
            - backend

    adminer:
        image: ghcr.io/shyim/adminerevo:latest
        container_name: adminer
        restart: always
        ports:
            - '8080:8080'
        depends_on:
            - db

volumes:
    postgres_data:
